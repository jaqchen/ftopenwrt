#!/bin/bash

# Created by yejq.jiaqiang@gmail.com
# 2022/08/28

# configure for linux/riscv64
board_dtb_config() {
	make ARCH=riscv CROSS_COMPILE=riscv64-unknown-linux-gnu- dongshanpi_defconfig
	return $?
}

board_dtb_build() {
	# this will build linux-5.4/arch/risvc/boot/dts/sunxi/board.dtb
	make ARCH=riscv CROSS_COMPILE=riscv64-unknown-linux-gnu- dtbs
	return $?
}

board_dtb_clean() {
	make ARCH=riscv CROSS_COMPILE=riscv64-unknown-linux-gnu- clean
	return $?
}

openwrt_config() {
	if [ -x "${FTOPDIR}/download/symlink.sh" ] ; then
		# if download directory exists, create
		# symbolic links for download tarballs
		"${FTOPDIR}/download/symlink.sh" dl
	fi

	# remove files first before re-creating symlink
	rm -rf files ; sync
	local TARGETDIR="${FTOPDIR}/dongshanpi-riscv64-target"
	ln -sv "${TARGETDIR}/extra-files" files
	local rval=$?
	[ ${rval} -ne 0 ] && return 1

	# update feeds for openwrt
	./scripts/feeds update -a ; rval=$?
	[ ${rval} -ne 0 ] && return 2
	./scripts/feeds install -a ; rval=$?
	[ ${rval} -ne 0 ] && return 3

	# write .config file for openwrt
	cp -v -f "${TARGETDIR}/dongshanpi.config" .config ; rval=$?
	[ ${rval} -ne 0 ] && return 4

	# expand .config via make V=s -j1 defconfig
	make V=s -j1 defconfig
	return $?
}

openwrt_build() {
	make V=s "-j${MKJOB:-4}"
	return $?
}

openwrt_clean() {
	make V=s "-j${MKJOB:-4}" clean
	return $?
}

awpackimg_prepare() {
	: NOTHING TODO TO PREPARE ALLWINNER IMAGE PACKER
	return 0
}

awpackimg_build() {
	local rval=0
	local PREDIR="${PWD}"

	# remove existing files
	rm -rf *.img image/boot.fex image/rootfs.fex

	# generate boot.img via mkbootimg
	mkbootimg --kernel  ${FTOPDIR}/linux-5.4/arch/riscv/boot/Image.gz --board d1-h-nezha \
		--base 0x40000000 --kernel_offset 0x0 -o boot.img ; rval=$?
	[ ${rval} -ne 0 ] && return 1

	# link boot.img as image/boot.fex
	ln -v boot.img image/boot.fex ; rval=$?
	[ ${rval} -ne 0 ] && return 2

	# copy rootfs image generated by openwrt-22.03
	local SQUASH_IMG="${FTOPDIR}/openwrt-22.03/build_dir/target-riscv64-unknown-linux-gnu_glibc/linux-dongshanpi_awd1/root.squashfs"
	cp -v "${SQUASH_IMG}" rootfs.img && ln -v rootfs.img image/rootfs.fex ; rval=$?
	[ ${rval} -ne 0 ] && return 3

	cd image || return 4
	dragon image.cfg sys_partition_for_dragon.fex ; rval=$?

	cd "${PREDIR}"
	if [ ${rval} -eq 0 ] ; then
		mv image/tina_d1-h-nezha_uart0.img ./
		ls -lh tina_d1-h-nezha_uart0.img
	fi
	return ${rval}
}

awpackimg_clean() {
	rm -rf *.img
	return 0
}

register_source 'linux-5.4' \
	board_dtb_config board_dtb_build board_dtb_clean
register_source 'openwrt-22.03' \
	openwrt_config openwrt_build openwrt_clean
register_source 'd1-h-nezha' \
	awpackimg_prepare awpackimg_build awpackimg_clean
